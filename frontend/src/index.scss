/******************************
  0 - 600px phone
  600 - 900px tablet portrait
  900 - 1200px tablet landscape
  1200 - 1800px normal style
  1800px big desktop 
*********************************/
/* breakpoints 
- phone
- tab-port
- tab-land
- big-desktop
*/

// 1 em = 16px
@mixin respond($breakpoint) {
  @if $breakpoint==phone-small {
    @media (max-width: 22.5em) {
      @content;
    }
  }

  @if $breakpoint==phone {
    @media (max-width: 37.5em) {
      //600px
      @content;
    }
  }

  @if $breakpoint==tab-port {
    @media (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint==tab-land {
    @media (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint==big-desktop {
    @media (min-width: 112.5em) {
      @content;
    }
  }
}

/***********************************
DEFINING ROOT VARIABLES
************************************/
:root {
  --color-primary: #222831;
  --color-primary-light: #37414f;
  --color-primary-dark: #010d16;
  --color-bg: #024d8b;
  --color-secondary-dark: #00adb5;
  --color-secondary: #47b8e0;
  --color-tertiary: #ff7473;
  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;
  --color-grey-dark-1: #111;
  --color-grey-dark-2: #333;
  --color-grey-dark-3: #777;
  --color-grey-dark-4: #999;
  --color-grey-dark-5: #808080;
  --font-family-primary: 'Open Sans', sans-serif;
  --font-family-secondary: 'Berkshire Swash', cursive;
}

html {
  box-sizing: border-box;
  /*
    -->Here we are defining root font size 
    -->Its in percentage to have functionality of zoom in and zoom out and it will change the font size of 
    -->The percentage also helps if user change default font size of browser so percentage value will adjust according to that 
    -->root default font size of browser is 16px so 62.5% of 16px will be 10px which will be equal to 1rem so it will be easy to use rem  with respect to 10px instead of with respect to 16px 
    -->  1rem = 10px
  */
  font-size: 62.5%;

  @include respond(tab-land) {
    font-size: 56.25%; // 1rem = 9px
  }

  @include respond(tab-port) {
    font-size: 50%; //1rem = 8px
  }

  @include respond(phone) {
    font-size: 40%;
  }

  @include respond(phone-small) {
    font-size: 30%;
  }

  @include respond(big-desktop) {
    font-size: 75%; // 1 rem = 12px
  }
}

body {
  font-family: var(--font-family-primary);
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-grey-light-1);
  color: var(--color-grey-dark-1);
  height: 100vh;
  // padding: 3rem 5rem;
  padding-top: 0;
  // background-color: #eee;
}

* {
  margin: 0;
  padding: 0;
}

/* Applying box-sizing property of all element and before and after Pseudo elements to border box so width and height will be equal to define width and height */

*,
*::after,
*::before {
  box-sizing: border-box;
}

input:focus,
button:focus {
  outline: none;
  border: none;
}

button {
  border: none;
}

button:hover {
  cursor: pointer;
}

input {
  font-family: inherit;
  color: inherit;
}

@media only screen and (min-width: 1600px) {
  html {
    font-size: 75%;
    /* 1rem = 9px */
  }
}

/*********************************************
SCROLL BAR DESIGN FOR CHROME
********************************************-*/
::-webkit-scrollbar {
  width: 0.8rem;
}

::-webkit-scrollbar-track {
  background-color: var(--color-primary-light);
  border-radius: 1rem;
}

::-webkit-scrollbar-thumb {
  background-color: var(--color-secondary);
  border-radius: 1rem;
}

::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-secondary-dark);
}
